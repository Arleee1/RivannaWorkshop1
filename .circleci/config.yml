version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.9
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      # - run: sudo chown -R circleci:circleci /usr/local/bin
      # - run: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - platformio-v4-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "platformio.ini" }}
            - platformio-v4-{{ .Branch }}-{{ checksum "Pipfile" }}-
            - platformio-v4-{{ .Branch }}-
            - platformio-v4-
      - run:
          name: Set up
          command: |
            pip install pipenv
            pipenv install platformio
            pipenv run pio update
      - save_cache:
          paths:
            - ~/.local/share/virtualenvs  # this path depends on where pipenv creates a virtualenv
            - ~/.platformio/cache
          key: platformio-v4-{{ .Branch }}-{{ checksum "Pipfile" }}-{{ checksum "platformio.ini" }}
      - run:
          name: Build
          command: |
            pipenv run pio run -e uva_solar_car
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job. 
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: ~/
          # Must be relative path from root
          paths:
            - .local/share/virtualenvs  # this path depends on where pipenv creates a virtualenv
            - .platformio/cache
  test:
    docker:
      - image: cimg/python:3.9
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/
      - checkout
      - run:
          name: Test
          command: |
            pipenv run pio test -e native
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
        